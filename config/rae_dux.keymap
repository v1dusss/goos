/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

&lt { flavor = "hold-preferred"; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        Tri {
            if-layers = <2 1>;
            then-layer = <3>;
        };
    };

    behaviors {
        hrm: home_row_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <300>;
            bindings = <&kp>, <&kp>;
        };

        lt_repeat: lt_repeat {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_REPEAT";
            bindings = <&mo>, <&key_repeat>;

            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <300>;
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <300>;
            bindings = <&kp>, <&kp>;
        };

        asdasd: asdasd {
            compatible = "zmk,behavior-hold-tap";
            label = "ASDASD";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Gamepad {
            bindings = <&tog 4>;
            key-positions = <8 28>;
        };

        Lock_my_Screen {
            bindings = <&kp LC(LG(Q))>;
            key-positions = <9 29>;
        };

        lock {
            bindings = <&kt K_SCREENSAVER>;
            key-positions = <0 20>;
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp H &kp E &kp L &kp L &kp O>;
            label = "NEW_MACRO";
        };

        github: github {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp G &kp I &kp T &kp SPACE &kp C &kp L &kp O &kp N &kp E &kp SPACE>;
            label = "GITHUB";
            wait-ms = <1>;
            tap-ms = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha_layer_qwerty {
            bindings = <
&kp Q                &kp W            &kp E                &kp R              &kp T                               &kp Y        &kp U               &kp I                 &kp O             &kp P
&hrm LEFT_CONTROL A  &hrm LEFT_ALT S  &hrm LEFT_COMMAND D  &hrm LEFT_SHIFT F  &kp G                               &kp H        &hrm RIGHT_SHIFT J  &hrm RIGHT_COMMAND K  &hrm RIGHT_ALT L  &hrm RIGHT_CONTROL SEMICOLON
&kp Z                &kp X            &kp C                &kp V              &kp B                               &kp N        &kp M               &kp COMMA             &kp DOT           &kp SLASH
                                                           &kp ESC            &lt 2 DELETE  &kp TAB    &kp ENTER  &lt 1 SPACE  &kp BACKSPACE
            >;
        };

        Symbol {
            bindings = <
&none                      &kp SINGLE_QUOTE          &kp DOLLAR             &kp AMPERSAND         &kp CARET                    &none          &kp POUND        &kp LEFT_BRACKET                   &kp RIGHT_BRACKET             &none
&hrm LEFT_ALT EXCLAMATION  &hrm LCTRL DOUBLE_QUOTES  &hrm LEFT_SHIFT MINUS  &hrm LGUI UNDERSCORE  &kp PLUS                     &kp PLUS       &hrm LGUI ASTRK  &hrm RIGHT_SHIFT LEFT_PARENTHESIS  &hrm LCTRL RIGHT_PARENTHESIS  &hrm RIGHT_ALT PERCENT
&none                      &kp GRAVE                 &kp PIPE               &kp EQUAL             &kp TILDE                    &kp BACKSLASH  &kp AT_SIGN      &kp LEFT_BRACE                     &kp RIGHT_BRACE               &none
                                                                            &kp ESC               &mo 2      &kp TAB    &none  &none          &none
            >;

            label = "symbol_layer";
        };

        Numbers_Navigation {
            bindings = <
&none             &kp NUMBER_9   &kp NUMBER_8        &kp NUMBER_7  &kp MINUS                      &kp C_BRI_UP  &kp C_MUTE      &kp C_VOLUME_DOWN    &kp C_VOLUME_UP   &none
&hrm LEFT_ALT N0  &hrm LCTRL N3  &hrm LEFT_SHIFT N2  &hrm LGUI N1  &kp PLUS                       &kp LEFT      &hrm LGUI DOWN  &hrm RIGHT_SHIFT UP  &hrm LCTRL RIGHT  &kp RIGHT_ALT
&none             &kp NUMBER_6   &kp NUMBER_5        &kp NUMBER_4  &kp STAR                       &kp C_BRI_DN  &kp C_PREV      &kp C_PP             &kp C_NEXT        &none
                                                     &none         &none      &none    &kp ENTER  &mo 1         &kp BSPC
            >;

            label = "numb_nav_layer";
        };

        Tri {
            bindings = <
&bootloader   &none  &none  &none  &none                  &none  &none    &none                       &none                 &bootloader
&bt BT_SEL 0  &none  &kp A  &none  &none                  &none  &github  &new_behavior LEFT_SHIFT C  &asdasd LEFT_SHIFT D  &none
&bt BT_CLR    &none  &none  &none  &none                  &none  &none    &none                       &none                 &none
                            &none  &none  &none    &none  &none  &none
            >;

            label = "tri_layer";
        };

        gamepad {
            bindings = <
&kp ESC  &kp Q  &kp W  &kp E      &kp R                      &none  &kp L     &kp UP    &kp R      &none
&kp TAB  &kp A  &kp S  &kp D      &kp F                      &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none
&none    &kp Y  &kp X  &kp C      &none                      &none  &kp S     &none     &kp E      &none
                       &kp LSHFT  &kp SPACE  &none    &kp B  &kp A  &none
            >;
        };
    };
};
